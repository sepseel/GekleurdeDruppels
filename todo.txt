SERVER: 
python: gekleurde druppel spel:
    class Rooster:
        functies:
            __init__(size=5):
                maakt een random spelbord aan met de 
                opgegeven size met de functie maakRooster

            __str__():
                geeft stringweergave van spelbord 

            updatevlek(kleur):
                update de 'vlek' met de opgegeven kleur

            buren(rij, kol):
                geeft de buren van een tegel (om de vlek uit
                te breiden)

            druppel(kleur):
                laat een druppel vallen op de druppeltegel
                in de opgegeven kleur en update ook de vlek

            gewonnen():
                kijkt na of het spel gewonnen is of niet

            zetten():
                vind de mogelijke zetten

            status():
                geeft een dict trug met de huidige status
                {
                    board:   [["purple", "orange", "red"], ["blue", "green", "purple"], ["green", "purple", "purple"]],
                    vlek:    [(0, 0)]
                    moves:   ["orange", "blue", "green", "purple", "red"],
                    score:   0,
                    message: ''
                }
        
    functies:
        maakRooster(size):
            geeft een random rooster terug volgens de 
            opgegeven size met random kleuren 
            

cgi: interface met spel:

functies: 
    new_game(size): 
        start nieuw spel en geeft dict 
        terug dat hoort bij een nieuw random 
        bord met de opgegeven size

    do_move(status, zet, zetindex=druppeltegel): 
        geeft dict trug met de nieuwe status na de zet


WEBCLIENT:
javascript:


html:
    knop:
        'New game', start nieuw spel

    dropdown menu:
        van mogelijke zetten, om de volgdende zet te kiezen

    tekst:
        titel:  'Gekleurde druppels'
        'Score:' score van het spel

    grid:
        spelbord, als geklikt voer zet uit
    

    






